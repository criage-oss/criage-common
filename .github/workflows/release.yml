name: Release Criage Common

on:
  push:
    branches: ["main"]
    tags: ["v*"]
  pull_request:
    branches: ["main"]

env:
  GO_VERSION: "1.21"
  MODULE_NAME: "criage-common"
  VERSION: "1.0.0"

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod tidy && go mod download

      - name: Run tests
        run: go test -v ./...

      - name: Run go vet
        run: go vet ./...

      - name: Check code formatting
        run: |
          if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
            echo "Code is not formatted:"
            gofmt -s -l .
            exit 1
          fi

      - name: Build module
        run: go build -v ./...

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=5m

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Download dependencies
        run: go mod download

      - name: Install Gosec
        run: go install github.com/securecodewarrior/gosec/v2/cmd/gosec@latest

      - name: Run Gosec Security Scanner
        run: gosec -fmt sarif -out gosec.sarif ./...
        continue-on-error: true

      - name: Upload Gosec results
        if: always()
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: gosec.sarif

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [test, lint, security]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build for multiple platforms
        run: |
          mkdir -p dist
          
          # Linux amd64
          GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o dist/criage-common-linux-amd64 .
          
          # Linux arm64
          GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -o dist/criage-common-linux-arm64 .
          
          # Windows amd64
          GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o dist/criage-common-windows-amd64.exe .
          
          # Windows arm64
          GOOS=windows GOARCH=arm64 go build -ldflags="-s -w" -o dist/criage-common-windows-arm64.exe .
          
          # macOS amd64
          GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o dist/criage-common-darwin-amd64 .
          
          # macOS arm64
          GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o dist/criage-common-darwin-arm64 .

      - name: Create archives
        run: |
          cd dist
          
          # Linux
          tar -czf criage-common-linux-amd64.tar.gz criage-common-linux-amd64
          tar -czf criage-common-linux-arm64.tar.gz criage-common-linux-arm64
          
          # Windows
          zip criage-common-windows-amd64.zip criage-common-windows-amd64.exe
          zip criage-common-windows-arm64.zip criage-common-windows-arm64.exe
          
          # macOS
          tar -czf criage-common-darwin-amd64.tar.gz criage-common-darwin-amd64
          tar -czf criage-common-darwin-arm64.tar.gz criage-common-darwin-arm64

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*.{tar.gz,zip}
          body: |
            ## Criage Common v${{ env.VERSION }}
            
            –û–±—â–∏–π –º–æ–¥—É–ª—å –¥–ª—è —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã –ø–∞–∫–µ—Ç–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ Criage.
            
            ### üì¶ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:
            
            - **Types** - –æ–±—â–∏–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
            - **Config** - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π 
            - **Archive** - —Ä–∞–±–æ—Ç–∞ —Å –∞—Ä—Ö–∏–≤–∞–º–∏ –ø–∞–∫–µ—Ç–æ–≤
            
            ### üîß –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –∞—Ä—Ö–∏–≤–æ–≤:
            - tar.zst (Zstandard) - —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è
            - tar.lz4 (LZ4) - –±—ã—Å—Ç—Ä—ã–π
            - tar.xz (XZ) - –∫–æ–º–ø–∞–∫—Ç–Ω—ã–π  
            - tar.gz (Gzip) - —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å
            - zip - Windows
            - criage - —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
            
            ### üöÄ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
            
            ```bash
            go get github.com/criage-oss/criage-common@${{ github.ref_name }}
            ```
            
            ```go
            import "github.com/criage-oss/criage-common/types"
            import "github.com/criage-oss/criage-common/config"
            import "github.com/criage-oss/criage-common/archive"
            ```
            
            ### üîó –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤:
            - [criage-client](https://github.com/criage-oss/criage-client) - CLI –ø–∞–∫–µ—Ç–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
            - [criage-server](https://github.com/criage-oss/criage-server) - HTTP —Å–µ—Ä–≤–µ—Ä —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
            - [criage-mcp](https://github.com/criage-oss/criage-mcp) - MCP —Å–µ—Ä–≤–µ—Ä –¥–ª—è AI
            
            ### üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:
            - [README.md](README.md) - –æ—Å–Ω–æ–≤–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
            - [GoDoc](https://pkg.go.dev/github.com/criage-oss/criage-common)
            - [–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è](https://criage.ru/docs.html)
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-pkg:
    name: Publish to Go Package Registry
    runs-on: ubuntu-latest
    needs: release
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Publish to pkg.go.dev
        run: |
          # pkg.go.dev –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–Ω–¥–µ–∫—Å–∏—Ä—É–µ—Ç –ø—É–±–ª–∏—á–Ω—ã–µ –º–æ–¥—É–ª–∏
          # –ü—Ä–æ—Å—Ç–æ —É–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –º–æ–¥—É–ª—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π
          go mod tidy
          go mod verify
          echo "Module will be automatically indexed by pkg.go.dev"

  update-dependents:
    name: Notify Dependent Repositories
    runs-on: ubuntu-latest
    needs: release
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Trigger client update
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'criage-oss',
              repo: 'criage-client',
              workflow_id: 'update-dependencies.yml',
              ref: 'main',
              inputs: {
                common_version: '${{ github.ref_name }}'
              }
            });

      - name: Trigger server update  
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'criage-oss',
              repo: 'criage-server',
              workflow_id: 'update-dependencies.yml', 
              ref: 'main',
              inputs: {
                common_version: '${{ github.ref_name }}'
              }
            });

      - name: Trigger MCP update
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'criage-oss',
              repo: 'criage-mcp',
              workflow_id: 'update-dependencies.yml',
              ref: 'main', 
              inputs: {
                common_version: '${{ github.ref_name }}'
              }
            });
